{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGaC,SAASC,cAAc,SAO/BC,iBAAiB,UAGtB,SAA8BC,G,kBAoC9B,IAAuBC,EAAUC,GAAVD,EAjBLE,EAiBeD,EAjBZE,EAkBZ,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEL,WAAUC,UAEpBK,EAAO,CAAEN,WAAUC,S,GAEpBA,E,KAzBAS,MAAK,SAAAC,GAAWA,EAARX,S,IAAUC,EAAKU,EAALV,MACjBW,EAAAlB,GAASmB,OAAOC,QACd,uBAAiCC,OAARb,EAAE,QAAYa,OAANd,EAAM,M,IAG1Ce,OAAM,SAAAL,GAAWA,EAARX,S,IAAUC,EAAKU,EAALV,MAClBW,EAAAlB,GAASmB,OAAOI,QACd,sBAA8BF,OAARb,EAAE,QAAYa,OAANd,EAAM,M,IAG1CE,GAASe,C,EA5BXnB,EAAEoB,iBAOF,IAAIhB,EAAQJ,EAAEqB,cAAcC,QACtBH,EAAiBnB,EAAEqB,cAAcC,QACjCC,EAAYvB,EAAEqB,cAAcC,QAElCE,QAAQC,IAAIzB,EAAEqB,cAAcC,SAC5BE,QAAQC,IAAIzB,EAAEqB,cAAcC,SAC5BE,QAAQC,IAAIzB,EAAEqB,cAAcC,SAG5B,IAAK,IAAII,EAAI,EAAGA,GAAKH,EAAWG,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst form = document.querySelector('.form');\n\n// const firstDelayMs = document.querySelector('[name=\"delay\"]');\n// const delayStepMs = document.querySelector('[name=\"step\"]');\n// const amount = document.querySelector('[name=\"amount\"]');\n\n\nform.addEventListener('submit', submitCreatePromises);\n\n\nfunction submitCreatePromises(e) {\n\n  e.preventDefault();\n\n  // let delay = firstDelayMs.valueAsNumber;\n  // const delayStepMsVal = delayStepMs.valueAsNumber;\n  // const amountVal = amount.valueAsNumber;\n\n  \n  let delay = e.currentTarget.element;\n  const delayStepMsVal = e.currentTarget.element;\n  const amountVal = e.currentTarget.element;\n  \n  console.log(e.currentTarget.element);\n  console.log(e.currentTarget.element);\n  console.log(e.currentTarget.element);\n\n\n  for (let i = 1; i <= amountVal; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${i} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${i} in ${delay}ms`\n        );\n      });\n    delay += delayStepMsVal;\n  }\n}\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","e","position","delay","i","delay1","Promise","resolve","reject","setTimeout","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","delayStepMsVal","preventDefault","currentTarget","element","amountVal","console","log","i1","_loop"],"version":3,"file":"03-promises.806b066c.js.map"}